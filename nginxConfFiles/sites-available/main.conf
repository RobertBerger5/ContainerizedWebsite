##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
	
server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	listen 443 ssl default_server;
	server_name bergerrob.com;
	root /frontend;
	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php;
	
	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	try_files $uri =404;
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #	fastcgi_pass php:9000;
        #	fastcgi_index index.php;
        #	include fastcgi_params;
        #	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #	fastcgi_param PATH_INFO $fastcgi_path_info;
	#	fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		 
		#include snippets/fastcgi-php.conf;
		
		# With php-fpm (or other unix sockets):
		#fastcgi_pass unix:/run/php/php7.0-fpm.sock; #used to be /var/run/...
		# With php-cgi (or other tcp sockets):
		#fastcgi_pass 127.0.0.1:9000; #don't think I need this but whatever

		#https://www.linode.com/docs/web-servers/nginx/serve-php-php-fpm-and-nginx/ told me to put this in
		#fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		#fastcgi_param SCRIPT_NAME $fastcgi_script_name;
	#}
	

	#server_name localhost; #bergerrob.com;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

    #listen [::]:443 ssl ipv6only=on default_server; # managed by Certbot
    #listen 443 ssl default_server; # managed by Certbot
    
    ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server{
	listen 80;
	listen [::]:80;
	server_name bergerrob.com;
	
	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}

	location / {
		return 301 https://$host$request_uri;
	}
}
